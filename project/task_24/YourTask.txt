Ваша задача: изучите дизайн паттерн Inversion of Control (IoC).

IoC в действительности поддерживает три
способа получения внешних зависимостей классом:
- через конструктор;
- через set метод;
- через свойство объекта.

Разберитесь как работает дизайн паттерн Inversion of Control (IoC).
Попробуйте узнать, какой способ получения зависимостей лучше,
какие плюсы и минусы есть у каждого способа.


Рекомендованные линки для изучения:

https://martinfowler.com/articles/injection.html

https://odrotbohm.de/2013/11/why-field-injection-is-evil/

https://www.baeldung.com/constructor-injection-in-spring

https://livebook.manning.com/book/dependency-injection/chapter-1/

PS: не забудьте по окончанию выполнения шага создать и заполнить
файл /documentation/Task_x_description.txt. Формат заполнения этого
файла описан в task_1 в файле Learning_reflection.txt.

PS: не забудьте присоединиться к Телеграмм чату в котором можно
задавать любые вопросы по проекту ВИРТУАЛЬНАЯ СТАЖИРОВКА:
https://t.me/+mvRhG9YECTlkZjQ0

Те кто предпочитает лично пообщаться с автором проекта,
пишите в Телеграмм: javagurulv или на почту: viktor.savonin@gmail.com.